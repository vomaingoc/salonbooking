{"ast":null,"code":"var _jsxFileName = \"/Users/loinguyen/.Trash/web/src/contexts/MainContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TEST = 'TEST';\nexport const LOGINED = 'LOGINED';\nconst initialState = {\n  testData: null,\n  authenticated: false,\n\n  testDataSetter() {\n    throw new Error('Context not yet initial');\n  },\n\n  loginedSetter() {\n    throw new Error('Context not yet initial');\n  },\n\n  userType: null\n};\nconst MainContext = /*#__PURE__*/React.createContext(initialState);\nMainContext.displayName = 'MainContext';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case LOGINED:\n      return { ...state,\n        userLogin: action.payload,\n        authenticated: true,\n        userType: action.payload.user.userType\n      };\n\n    case TEST:\n      return { ...state,\n        testMode: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst MainContextProvider = props => {\n  _s();\n\n  let [state, dispatch] = useReducer(reducer, initialState);\n  const testDataSetter = useCallback(data => {\n    dispatch({\n      type: TEST,\n      payload: { ...data\n      }\n    });\n  }, []);\n  const loginedSetter = useCallback(data => {\n    dispatch({\n      type: LOGINED,\n      payload: { ...data\n      }\n    });\n  }, []);\n  const value = useMemo(() => ({ ...state,\n    testDataSetter,\n    loginedSetter\n  }), [loginedSetter, state, testDataSetter]);\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(MainContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MainContextProvider, \"WNMaFXcY3V6q3bkX91/f5WnrQU8=\");\n\n_c = MainContextProvider;\nexport { MainContext, MainContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContextProvider\");","map":{"version":3,"names":["React","useReducer","useEffect","useCallback","useMemo","TEST","LOGINED","initialState","testData","authenticated","testDataSetter","Error","loginedSetter","userType","MainContext","createContext","displayName","reducer","state","action","type","userLogin","payload","user","testMode","MainContextProvider","props","dispatch","data","value","children"],"sources":["/Users/loinguyen/.Trash/web/src/contexts/MainContext.tsx"],"sourcesContent":["import { ModelUserLogin } from 'models/user'\nimport React, { useReducer, Reducer, useEffect, useCallback, useMemo } from 'react'\nimport { IContextProviderProps } from './Types'\n\nexport const TEST = 'TEST'\nexport const LOGINED = 'LOGINED'\n\ninterface TestModel {\n  name: string\n}\n\ninterface AppState {\n  testData: TestModel | null\n  authenticated: boolean\n  testDataSetter: (data: TestModel) => void\n  loginedSetter: (data: ModelUserLogin) => void\n  userType: string | null\n}\n\nconst initialState: AppState = {\n  testData: null,\n  authenticated: false,\n  testDataSetter() {\n    throw new Error('Context not yet initial')\n  },\n  loginedSetter() {\n    throw new Error('Context not yet initial')\n  },\n  userType: null,\n}\n\nconst MainContext = React.createContext<AppState>(initialState)\nMainContext.displayName = 'MainContext'\ntype Action =\n  | { type: typeof LOGINED; payload: ModelUserLogin }\n  | { type: typeof TEST; payload: TestModel }\n\nconst reducer = (state: AppState, action: Action) => {\n  switch (action.type) {\n    case LOGINED:\n      return {\n        ...state,\n        userLogin: action.payload,\n        authenticated: true,\n        userType: action.payload.user.userType,\n      }\n    case TEST:\n      return {\n        ...state,\n        testMode: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nconst MainContextProvider = (props: IContextProviderProps) => {\n  let [state, dispatch] = useReducer<Reducer<AppState, Action>>(reducer, initialState)\n  const testDataSetter = useCallback((data: TestModel) => {\n    dispatch({\n      type: TEST,\n      payload: { ...data },\n    })\n  }, [])\n  const loginedSetter = useCallback((data: ModelUserLogin) => {\n    dispatch({\n      type: LOGINED,\n      payload: {\n        ...data,\n      },\n    })\n  }, [])\n  const value: AppState = useMemo(\n    () => ({\n      ...state,\n      testDataSetter,\n      loginedSetter,\n    }),\n    [loginedSetter, state, testDataSetter],\n  )\n  useEffect(() => {})\n  return <MainContext.Provider value={value}>{props.children}</MainContext.Provider>\n}\nexport { MainContext, MainContextProvider }\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAAqCC,SAArC,EAAgDC,WAAhD,EAA6DC,OAA7D,QAA4E,OAA5E;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAcP,MAAMC,YAAsB,GAAG;EAC7BC,QAAQ,EAAE,IADmB;EAE7BC,aAAa,EAAE,KAFc;;EAG7BC,cAAc,GAAG;IACf,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;EACD,CAL4B;;EAM7BC,aAAa,GAAG;IACd,MAAM,IAAID,KAAJ,CAAU,yBAAV,CAAN;EACD,CAR4B;;EAS7BE,QAAQ,EAAE;AATmB,CAA/B;AAYA,MAAMC,WAAW,gBAAGd,KAAK,CAACe,aAAN,CAA8BR,YAA9B,CAApB;AACAO,WAAW,CAACE,WAAZ,GAA0B,aAA1B;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAkBC,MAAlB,KAAqC;EACnD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKd,OAAL;MACE,OAAO,EACL,GAAGY,KADE;QAELG,SAAS,EAAEF,MAAM,CAACG,OAFb;QAGLb,aAAa,EAAE,IAHV;QAILI,QAAQ,EAAEM,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBV;MAJzB,CAAP;;IAMF,KAAKR,IAAL;MACE,OAAO,EACL,GAAGa,KADE;QAELM,QAAQ,EAAEL,MAAM,CAACG;MAFZ,CAAP;;IAIF;MACE,OAAOJ,KAAP;EAdJ;AAgBD,CAjBD;;AAmBA,MAAMO,mBAAmB,GAAIC,KAAD,IAAkC;EAAA;;EAC5D,IAAI,CAACR,KAAD,EAAQS,QAAR,IAAoB1B,UAAU,CAA4BgB,OAA5B,EAAqCV,YAArC,CAAlC;EACA,MAAMG,cAAc,GAAGP,WAAW,CAAEyB,IAAD,IAAqB;IACtDD,QAAQ,CAAC;MACPP,IAAI,EAAEf,IADC;MAEPiB,OAAO,EAAE,EAAE,GAAGM;MAAL;IAFF,CAAD,CAAR;EAID,CALiC,EAK/B,EAL+B,CAAlC;EAMA,MAAMhB,aAAa,GAAGT,WAAW,CAAEyB,IAAD,IAA0B;IAC1DD,QAAQ,CAAC;MACPP,IAAI,EAAEd,OADC;MAEPgB,OAAO,EAAE,EACP,GAAGM;MADI;IAFF,CAAD,CAAR;EAMD,CAPgC,EAO9B,EAP8B,CAAjC;EAQA,MAAMC,KAAe,GAAGzB,OAAO,CAC7B,OAAO,EACL,GAAGc,KADE;IAELR,cAFK;IAGLE;EAHK,CAAP,CAD6B,EAM7B,CAACA,aAAD,EAAgBM,KAAhB,EAAuBR,cAAvB,CAN6B,CAA/B;EAQAR,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;EACA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE2B,KAA7B;IAAA,UAAqCH,KAAK,CAACI;EAA3C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA1BD;;GAAML,mB;;KAAAA,mB;AA2BN,SAASX,WAAT,EAAsBW,mBAAtB"},"metadata":{},"sourceType":"module"}